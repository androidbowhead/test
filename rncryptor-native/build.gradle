apply plugin: 'com.android.application'

def version = 9;

ext {
    bintrayRepo = 'maven'
    bintrayName = 'rncryptor-native'

    publishedGroupId = 'com.github.bowhead'
    libraryName = 'RNCryptorNative'
    artifact = 'rncryptor-native'

    libraryDescription = 'Android JNI model library with prebuilt RNCryptor++'

    siteUrl = 'https://github.com/TGIO/RNCryptorNative'
    gitUrl = 'https://github.com/TGIO/RNCryptorNative.git'

    libraryVersion = "0.0.".concat(version.toString())

    developerId = 'tgio'
    developerName = 'Giorgi Tabatadze'
    developerEmail = 'gio.caporegime@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode version
        versionName libraryVersion

       /* ndk {
            moduleName = 'rncrypto'
            ldLibs "android", "log"
            stl "gnustl_shared"
        }

        externalNativeBuild {
            ndkBuild {
                cppFlags "-frtti", "-fexceptions"
            }
        }*/
    }


    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file("proguard-rules.pro"))
        }
    }


    /*sourceSets {
        main {
            jni {
                dependencies {
                    //library "cryptopp" linkage "shared"
                }

                // exportedHeaders {
                srcDir "src/main/jni"
                //}
            }

            jniLibs{
                srcDir "src/main/jniLibs/${targetPlatform.getName()}/libcryptopp_shared.so"
            }

            *//*jniLibs {
                dependencies {
                    dependencies {
                        // libraryName "cryptopp"
                    }
                }
            }*//*
        }
    }*/
}

/*repositories {
    libs(PrebuiltLibraries) {
        cryptopp {
            headers.srcDir "src/main/jni/cryptopp"
            binaries.withType(SharedLibraryBinary) {
                sharedLibraryFile = file("src/main/jniLibs/${targetPlatform.getName()}/libcryptopp_shared.so")
            }
        }
    }}*/





apply from: '../bintray.gradle';
apply from: '../install.gradle';
